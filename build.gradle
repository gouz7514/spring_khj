buildscript {
    ext {
        springBootversion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootversion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//plugins {
//    id 'java'
//}

group 'org.example'
version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-mustache')

    compile('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    compile('org.springframework.boot:spring-boot-starter-data-jpa') // 스프링 부트용 Spring Data JPA 추상화 라이브러리
    compile('com.h2database:h2') // 인메모리 관계형 데이터베이스, 별도의 설치 없이 프로젝트 의존성으로만 관리 가능

    compile('org.springframework.boot:spring-boot-starter-oauth2-client') // 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성

    compile('org.springframework.session:spring-session-jdbc')

    testCompile("org.springframework.security:spring-security-test")

    // MariaDB 드라이버를 build.gradle에 등록
    compile("org.mariadb.jdbc:mariadb-java-client")
}

//test {
//    useJUnitPlatform()
//}
